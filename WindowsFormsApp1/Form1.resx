<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAFYAAAAUAAGFAABjGFAAxjGMYBgH//Z
</value>
  </data>
</root>